int8 expect_5;

expect_5 = 1 * 2 + 3;


^^^^^^^^^^ Contents of illustrate_literals1.c included above for reference ^^^^^^^^^^

/* *************** <COMPILATION STAGE> **************** */
// ILLUSTRATIVE MODE: Starting compilation of expression that begins on illustrate_literals1.c:3:1

Current highest precedence sub-expression closed; compiler has read in all Tokens for this expression.
Scope Level 0: [expect_5][=][1][*][2][B+][3]
Left & right operands moved under (like tree branches) [*] operator (Multiply)
Scope Level 0: [expect_5][=]/*\[B+][3]

Parse tree of moved operator 
                            /*\
                         [1]   [2]

Left & right operands moved under (like tree branches) [B+] operator (Add)
Scope Level 0: [expect_5][=]/B+\

Parse tree of moved operator 
                            /B+\
                         /*\   [3]
                      [1][2]

Compiler's Parse Tree for Complete Expression
          /=\
[expect_5]   /B+\
          /*\   [3]
       [1][2]

Parse tree flattened and written out to interpreted file
[=][expect_5][B+][*][1][2][3]

Compiler ret_code = 0

/* *************** </COMPILATION STAGE> *************** */

/* *************** <INTERPRETER STAGE> **************** */
// ILLUSTRATIVE MODE: Flattened expression resolved below

[=][expect_5][B+][*][1][2][3]
                  ^ Multiply next 2 sequential operand(s); replace w/ result
[=][expect_5][B+][2][3]
              ^ Add next 2 sequential operand(s); replace w/ result
[=][expect_5][5]
 ^ Assign next 2 sequential operand(s); replace w/ result
[5] expression resolved
Interpreter ret_code = 0

/* ********** <SHOW VARIABLES & VALUES> ********** */
// ********** <SCOPE LEVEL 0> ********** 
// Scope opened by: INTERNAL_USE_TKN(U)->[__ROOT_SCOPE] on line 0 column 0
expect_5 = 5;
// ********** </SCOPE LEVEL 0> ********** 
/* ********** </SHOW VARIABLES & VALUES> ********** */
/* *************** </INTERPRETER STAGE> *************** */
